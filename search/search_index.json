{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Bem-vindo(a) \u00e0 minha documenta\u00e7\u00e3o de projetos de Machine Learning! Este espa\u00e7o re\u00fane desde os primeiros roteiros de estudo at\u00e9 o desenvolvimento de projetos completos, servindo como registro de aprendizado e entrega pr\u00e1tica.</p>"},{"location":"#objetivos","title":"Objetivos","text":"<ul> <li>Documentar passo a passo o desenvolvimento dos projetos;</li> <li>Centralizar c\u00f3digos, gr\u00e1ficos, anota\u00e7\u00f5es e insights obtidos;</li> <li>Acompanhar o progresso das entregas previstas;</li> <li>Facilitar a navega\u00e7\u00e3o por cada etapa (roteiros, modelos e projetos finais).</li> </ul>"},{"location":"#entregas","title":"Entregas","text":"<ul> <li> 1. \u00c1rvore de Decis\u00e3o \u2013 29/08/2025</li> <li> Roteiro 2 \u2013 pendente</li> <li> Roteiro 3 \u2013 pendente</li> <li> Roteiro 4 \u2013 pendente</li> <li> Projeto Final \u2013 pendente</li> </ul> <p>Esta documenta\u00e7\u00e3o \u00e9 viva: ser\u00e1 atualizada conforme avan\u00e7os, novos experimentos e entregas forem realizados.</p>"},{"location":"arvore-decisao/main/","title":"1. \u00c1rvore de Decis\u00e3o","text":"<p>As \u00e1rvores de decis\u00e3o s\u00e3o uma t\u00e9cnica popular de aprendizado de m\u00e1quina supervisionado usada para classifica\u00e7\u00e3o e regress\u00e3o.</p> <p>Neste projeto, foi utilizada a base de dados Credit Score Classification, que re\u00fane informa\u00e7\u00f5es banc\u00e1rias essenciais e uma grande quantidade de registros relacionados a cr\u00e9dito.</p> <p>O objetivo principal \u00e9 aplicar \u00e1rvores de decis\u00e3o para segmentar indiv\u00edduos em diferentes faixas de score de cr\u00e9dito, contribuindo para a identifica\u00e7\u00e3o de perfis de risco e para o apoio em processos de decis\u00e3o financeira.</p>"},{"location":"arvore-decisao/main/#exploracao-dos-dados","title":"Explora\u00e7\u00e3o dos Dados","text":"<p>A an\u00e1lise inicial do conjunto de dados inclui a descri\u00e7\u00e3o da natureza das vari\u00e1veis, estat\u00edsticas descritivas e visualiza\u00e7\u00f5es para compreender a distribui\u00e7\u00e3o e relev\u00e2ncia das informa\u00e7\u00f5es.</p>"},{"location":"arvore-decisao/main/#descricao-e-estatisticas-descritivas-das-colunas","title":"Descri\u00e7\u00e3o e estat\u00edsticas descritivas das colunas","text":"<p>A base cont\u00e9m 28 colunas, descritas a seguir:</p> <ul> <li><code>ID</code>: Identifica\u00e7\u00e3o \u00fanica de um registro. Irrelevante, pois n\u00e3o se repete e n\u00e3o agrega valor estat\u00edstico.</li> <li><code>Customer_ID</code>: Identifica\u00e7\u00e3o \u00fanica de um cliente. Irrelevante, mesma justificativa da coluna anterior.</li> <li><code>Month</code>: M\u00eas do ano. Valores bem distribu\u00eddos, cada m\u00eas representando aproximadamente 12,5% da base.</li> <li><code>Name</code>: Nome do cliente. Irrelevante, pois n\u00e3o se repete e n\u00e3o agrega valor estat\u00edstico.</li> <li><code>Age</code>: Idade do cliente. Distribui\u00e7\u00e3o equilibrada, com a maior concentra\u00e7\u00e3o em apenas 3% dos registros.</li> <li><code>SSN</code>: N\u00famero de seguridade social. Irrelevante, pois \u00e9 \u00fanico por cliente.</li> <li><code>Occupation</code>: Ocupa\u00e7\u00e3o do cliente. Valores bem distribu\u00eddos, com cada ocupa\u00e7\u00e3o representando em m\u00e9dia 6,6% da base.</li> <li><code>Annual_Income</code>: Renda anual. A distribui\u00e7\u00e3o sugere comportamento similar a um identificador, devido ao excesso de casas decimais, tornando cada valor praticamente \u00fanico.</li> <li><code>Monthly_Inhand_Salary</code>: Sal\u00e1rio mensal l\u00edquido. Mesma situa\u00e7\u00e3o da renda anual, funcionando como um identificador devido \u00e0 aus\u00eancia de repeti\u00e7\u00e3o.</li> <li><code>Num_Bank_Accounts</code>: N\u00famero de contas banc\u00e1rias do cliente. Distribui\u00e7\u00e3o equilibrada, com a maior frequ\u00eancia em 13% dos registros.</li> <li><code>Num_Credit_Card</code>: N\u00famero de cart\u00f5es de cr\u00e9dito. Bem distribu\u00eddo, com a maior representatividade em 18% da base.</li> <li><code>Interest_Rate</code>: Taxa de juros do cart\u00e3o. Distribui\u00e7\u00e3o uniforme, cada valor correspondendo a aproximadamente 5%.</li> <li><code>Num_of_Loan</code>: N\u00famero de empr\u00e9stimos obtidos. Distribui\u00e7\u00e3o equilibrada, com a maior concentra\u00e7\u00e3o em 15%.</li> <li><code>Type_of_Loan</code>: Tipo de empr\u00e9stimo. Diversidade de valores, cada tipo representando cerca de 1,44% da base.</li> <li><code>Delay_from_due_date</code>: M\u00e9dia de dias de atraso no pagamento. Bem distribu\u00eddo, com valores uniformes em torno de 3,6% cada.</li> <li><code>Num_of_Delayed_Payment</code>: M\u00e9dia de pagamentos em atraso. Maior representatividade em 8,6%.</li> <li><code>Changed_Credit_Limit</code>: Percentual de altera\u00e7\u00e3o no limite de cr\u00e9dito. Pouco relevante isoladamente, mas com potencial para feature engineering.</li> <li><code>Num_Credit_Inquiries</code>: N\u00famero de consultas de cr\u00e9dito. Distribui\u00e7\u00e3o equilibrada, com a maior frequ\u00eancia em 11,5%.</li> <li><code>Credit_Mix</code>: Classifica\u00e7\u00e3o da composi\u00e7\u00e3o de cr\u00e9ditos. Distribui\u00e7\u00e3o balanceada, com maior representatividade em 36,5% dos registros.</li> <li><code>Outstanding_Debt</code>: D\u00edvida pendente (USD). Irrelevante isoladamente, pois cada valor \u00e9 praticamente \u00fanico. Contudo, pode ser explorado via feature engineering.</li> <li><code>Credit_Utilization_Ratio</code>: Taxa de utiliza\u00e7\u00e3o do cr\u00e9dito. Irrelevante isoladamente, pois cada valor \u00e9 praticamente \u00fanico. Contudo, pode ser explorado via feature engineering.</li> <li><code>Credit_History_Age</code>: Tempo de hist\u00f3rico de cr\u00e9dito. Dados inconsistentes, exigindo pr\u00e9-processamento. Pode ser \u00fatil ap\u00f3s feature engineering.</li> <li><code>Payment_of_Min_Amount</code>: Indica se o cliente paga apenas o valor m\u00ednimo. Distribui\u00e7\u00e3o clara, com maior representatividade em 52,3%.</li> <li><code>Total_EMI_per_month</code>: Valor total de pagamentos mensais de EMI (USD). Irrelevante isoladamente, mas \u00fatil ap\u00f3s feature engineering.</li> <li><code>Amount_invested_monthly</code>: Valor investido mensalmente (USD). Irrelevante isoladamente, mas \u00fatil ap\u00f3s feature engineering.</li> <li><code>Payment_Behaviour</code>: Comportamento de pagamento do cliente. Distribui\u00e7\u00e3o com destaque para 25,5% dos registros.</li> <li><code>Monthly_Balance</code>: Saldo mensal do cliente (USD). Irrelevante isoladamente, mas \u00fatil ap\u00f3s feature engineering.</li> <li><code>Credit_Score</code>: Faixa de pontua\u00e7\u00e3o de cr\u00e9dito (Poor, Standard, Good). Distribui\u00e7\u00e3o equilibrada, com maior representatividade em 53,2%.</li> </ul>"},{"location":"arvore-decisao/main/#tipagem-das-colunas","title":"Tipagem das colunas","text":"<p>O dataset \u00e9 composto por apenas tr\u00eas tipos de dados: <code>Object</code>, <code>Float64</code> e <code>Int64</code>:</p> <ul> <li>Object(20): <code>ID</code>, <code>Customer_ID</code>, <code>Month</code>, <code>Name</code>, <code>Age</code>, <code>SSN</code>, <code>Occupation</code>, <code>Annual_Income</code>, <code>Num_of_Loan</code>, <code>Type_of_Loan</code>, <code>Num_of_Delayed_Payment</code>, <code>Changed_Credit_Limit</code>, <code>Outstanding_Debt</code>, <code>Credit_History_Age</code>, <code>Payment_of_Min_Amount</code>, <code>Amount_invested_monthly</code>, <code>Monthly_Balance</code>, <code>Payment_Behaviour</code>, <code>Credit_Score</code>, <code>Credit_Mix</code>.</li> <li>Float64(4): <code>Monthly_Inhand_Salary</code>, <code>Num_Credit_Inquiries</code>, <code>Credit_Utilization_Ratio</code>, <code>Total_EMI_per_month</code>.</li> <li>Int64(4): <code>Num_Bank_Accounts</code>, <code>Num_Credit_Card</code>, <code>Interest_Rate</code>, <code>Delay_from_due_date</code>.</li> </ul>"},{"location":"arvore-decisao/main/#variavel-alvo","title":"Vari\u00e1vel Alvo","text":"<p>O modelo tem como vari\u00e1vel alvo (target) a coluna <code>Credit_Score</code>, que representa a classifica\u00e7\u00e3o de cr\u00e9dito dos clientes.</p> <p>A distribui\u00e7\u00e3o da vari\u00e1vel \u00e9 a seguinte:</p> <ul> <li>Standard: 53.174 (53,2%)</li> <li>Poor: 28.998 (29,0%)</li> <li>Good: 17.828 (17,8%)</li> </ul> <p>Essa distribui\u00e7\u00e3o evidencia um leve desbalanceamento de classes, que deve ser considerado no pr\u00e9-processamento ou na avalia\u00e7\u00e3o do modelo.</p>"},{"location":"arvore-decisao/main/#amostra-dos-dados","title":"Amostra dos Dados","text":"<p>A seguir, um exemplo com 3 linhas de um total de 100.000 registros e um gr\u00e1fico de barras da distribui\u00e7\u00e3o de <code>Credit_Score</code> em rela\u00e7\u00e3o a <code>Payment_Behavior</code>:</p> data sample (3/100.000)plot ID Customer_ID Month Name Age SSN Occupation Annual_Income Monthly_Inhand_Salary Num_Bank_Accounts Num_Credit_Card Interest_Rate Num_of_Loan Type_of_Loan Delay_from_due_date Num_of_Delayed_Payment Changed_Credit_Limit Num_Credit_Inquiries Credit_Mix Outstanding_Debt Credit_Utilization_Ratio Credit_History_Age Payment_of_Min_Amount Total_EMI_per_month Amount_invested_monthly Payment_Behaviour Monthly_Balance Credit_Score 0x474c CUS_0xadc8 July Soyoungk 30 810-29-3531 Mechanic 84374.1 6605.37 8 7 9 3 Not Specified, Debt Consolidation Loan, and Not Specified 3 12 10.17 2 Standard 1000.76 34.4112 nan Yes 744.037 625.907 Low_spent_Small_value_payments 239.279 Standard 0x474d CUS_0xadc8 August Soyoungk 30 810-29-3531 Mechanic 1.88848e+07 6605.37 8 7 9 3 Not Specified, Debt Consolidation Loan, and Not Specified 8 14 10.17 2 _ 1000.76 31.4243 22 Years and 5 Months Yes 744.037 124.429 High_spent_Large_value_payments 690.757 Good 0x4752 CUS_0x6b50 January Janq 53 185-98-1380 Scientist 103049 8408.45 4 6 6 3 Not Specified, Credit-Builder Loan, and Home Equity Loan 23 6 9.46 0 Good 849.98 33.1978 17 Years and 10 Months No 255.208 102.972 High_spent_Large_value_payments 722.666 Poor 2025-08-24T22:40:00.188860 image/svg+xml Matplotlib v3.10.5, https://matplotlib.org/"},{"location":"arvore-decisao/main/#pre-processamento","title":"Pr\u00e9-processamento","text":"<p>Nesta etapa foi realizada a limpeza dos dados e o tratamento de valores ausentes, al\u00e9m da adequa\u00e7\u00e3o da tipagem das colunas para que estivessem compat\u00edveis com o modelo. Esse processo foi fundamental para garantir consist\u00eancia e qualidade antes do treinamento da \u00e1rvore de decis\u00e3o.</p>"},{"location":"arvore-decisao/main/#alteracao-de-tipagem-dos-dados","title":"Altera\u00e7\u00e3o de Tipagem dos Dados","text":"<p>Como destacado anteriormente, grande parte das colunas do dataset estavam no formato <code>object</code>. O primeiro passo foi padronizar essas tipagens, ajustando-as para <code>float64</code>, <code>int64</code> e <code>category</code>, de acordo com a natureza de cada vari\u00e1vel.</p> <ul> <li> <p>Apenas altera\u00e7\u00e3o de tipo: <code>ID</code>, <code>Customer_ID</code>, <code>Month</code>, <code>Name</code>, <code>SSN</code>, <code>Occupation</code>, <code>Type_of_Loan</code>, <code>Payment_Behaviour</code>, <code>Payment_of_Min_Amount</code> e <code>Credit_Score</code>.   Essas vari\u00e1veis puderam ser convertidas diretamente utilizando a fun\u00e7\u00e3o <code>astype()</code> do Pandas.</p> </li> <li> <p>Necessidade de limpeza antes da convers\u00e3o: <code>Num_of_Loan</code>, <code>Outstanding_Debt</code>, <code>Num_of_Delayed_Payment</code>, <code>Changed_Credit_Limit</code> e <code>Credit_Mix</code>.   Algumas dessas colunas apresentavam valores com o caractere <code>'_'</code>, o que impossibilitava a convers\u00e3o imediata.   Para trat\u00e1-las, o caractere foi substitu\u00eddo por valores nulos l\u00f3gicos e, em seguida, a tipagem correta foi aplicada.</p> </li> <li> <p>Feature engineering (transforma\u00e7\u00e3o em categorias): <code>Age</code>, <code>Annual_Income</code>, <code>Monthly_Inhand_Salary</code>, <code>Credit_History_Age</code>, <code>Total_EMI_per_month_Ajustado</code>, <code>Credit_Utilization_Ratio</code>, <code>Amount_invested_monthly</code> e <code>Monthly_Balance</code>.   Essas vari\u00e1veis foram agrupadas em categorias por faixas de valores.   O motivo \u00e9 que, em sua forma original, os dados apresentavam grande dispers\u00e3o \u2014 em alguns casos, praticamente cada linha tinha um valor \u00fanico \u2014 o que se comportava como um identificador, trazendo ru\u00eddo para o modelo e dificultando a identifica\u00e7\u00e3o de padr\u00f5es.</p> </li> </ul>"},{"location":"arvore-decisao/main/#colunas-retiradas-do-modelo","title":"Colunas Retiradas do Modelo","text":"<p>Algumas vari\u00e1veis foram consideradas irrelevantes ou inadequadas para a an\u00e1lise de risco e, portanto, foram removidas do modelo:</p> <ul> <li> <p><code>ID</code>, <code>Customer_ID</code>, <code>Name</code>, <code>SSN</code>   Essas colunas funcionam apenas como identificadores \u00fanicos e n\u00e3o possuem valor preditivo, trazendo apenas ru\u00eddo ao modelo.</p> </li> <li> <p><code>Month</code>   A interpretabilidade desta vari\u00e1vel n\u00e3o se mostrou clara, n\u00e3o apresentando rela\u00e7\u00e3o significativa com a pontua\u00e7\u00e3o de cr\u00e9dito.</p> </li> <li> <p><code>Type_of_Loan</code>   A coluna foi constru\u00edda de forma inconsistente, apresentando valores pouco padronizados e confusos.</p> </li> <li> <p><code>Credit_History_Age</code>, <code>Monthly_Balance</code>, <code>Amount_invested_monthly</code>, <code>Age</code>, <code>Monthly_Inhand_Salary</code>, <code>Annual_Income</code>   Essas vari\u00e1veis foram descartadas em sua forma original devido \u00e0 alta dispers\u00e3o ou inconsist\u00eancia dos valores.   Contudo, foram aproveitadas no modelo em suas vers\u00f5es ajustadas via feature engineering, garantindo maior relev\u00e2ncia preditiva.</p> </li> </ul> <p>Com isso, restaram 21 colunas efetivamente utilizadas no processo de modelagem, considerando que a vari\u00e1vel alvo (<code>Credit_Score</code>) foi separada:</p> <ul> <li> <p>Float64 (5): <code>Num_Credit_Inquiries</code>, <code>Credit_Utilization_Ratio</code>, <code>Total_EMI_per_month</code>, <code>Changed_Credit_Limit</code>, <code>Outstanding_Debt</code>.</p> </li> <li> <p>Int64 (6): <code>Num_Bank_Accounts</code>, <code>Num_Credit_Card</code>, <code>Interest_Rate</code>, <code>Delay_from_due_date</code>, <code>Num_of_Loan</code>, <code>Num_of_Delayed_Payment</code>.</p> </li> <li> <p>Category (10): <code>Credit_History_Age_Ajustado</code>, <code>Monthly_Balance_Ajustado</code>, <code>Amount_invested_monthly_Ajustado</code>, <code>Age_Ajustado</code>, <code>Monthly_Inhand_Salary</code>, <code>Annual_Income</code>, <code>Occupation</code>, <code>Credit_Mix</code>, <code>Payment_of_Min_Amount</code>, <code>Payment_Behaviour</code>.</p> </li> </ul>"},{"location":"arvore-decisao/main/#linhas-retiradas-do-modelo","title":"Linhas Retiradas do Modelo","text":"<p>Foram removidas 71.635 linhas que continham valores nulos ou nulos l\u00f3gicos, resultando em 28.365 registros dispon\u00edveis para o treinamento do modelo.</p>"},{"location":"arvore-decisao/main/#divisao-dos-dados","title":"Divis\u00e3o dos Dados","text":"<p>Os dados foram divididos em conjuntos de treino e teste utilizando a fun\u00e7\u00e3o <code>train_test_split</code> do scikit-learn:</p> <ul> <li>70% da base para treino</li> <li>30% da base para teste</li> </ul>"},{"location":"arvore-decisao/main/#treinamento-do-modelo","title":"Treinamento do Modelo","text":"<p>O modelo utilizado foi a Decision Tree (\u00c1rvore de Decis\u00e3o), considerando a vari\u00e1vel alvo <code>Credit_Score</code>.</p> outputcodedata sample (6/28.365) <p>Validation Accuracy: 0.6975 Feature Importances:  Feature Importance 10 Outstanding_Debt 0.207711 9 Credit_Mix 0.133306 18 Credit_History_Age_Ajustado 0.095160 5 Delay_from_due_date 0.089135 7 Changed_Credit_Limit 0.088350 3 Interest_Rate 0.074544 6 Num_of_Delayed_Payment 0.056388 0 Occupation 0.037370 12 Payment_Behaviour 0.034847 8 Num_Credit_Inquiries 0.034803 2 Num_Credit_Card 0.031269 1 Num_Bank_Accounts 0.031127 4 Num_of_Loan 0.023016 16 Age_Ajustado 0.016937 14 Credit_Utilization_Ratio_Ajustado 0.014162 15 Monthly_Inhand_Salary_Ajustado 0.012208 13 Annual_Income_Ajustado 0.011312 19 Amount_invested_monthly_Ajustado 0.005330 11 Payment_of_Min_Amount 0.001588 20 Monthly_Balance_Ajustado 0.001435 17 Total_EMI_per_month_Ajustado 0.000000 </p> <pre><code>import matplotlib.pyplot as plt\nimport pandas as pd\n\nfrom io import StringIO\nfrom sklearn import tree\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn import metrics\n\ndf = pd.read_csv('credit_score_classification.csv', low_memory=False)\n\n# ajustes de data type e limpezas prim\u00e1rias\ndf['ID'] = df['ID'].astype('string')\ndf['Customer_ID'] = df['Customer_ID'].astype('string')\ndf['Month'] = df['Month'].astype('string')\ndf['Name'] = df['Name'].astype('string')\ndf['SSN'] = df['SSN'].astype('string')\ndf['Occupation'] = df['Occupation'].astype('string')\ndf['Type_of_Loan'] = df['Type_of_Loan'].astype('string')\ndf['Payment_Behaviour'] = df['Payment_Behaviour'].astype('string')\ndf['Payment_of_Min_Amount'] = df['Payment_of_Min_Amount'].astype('string')\ndf['Credit_Utilization_Ratio'] = df['Credit_Utilization_Ratio'].astype('float')\n\ndf['Age'] = df['Age'].str.replace('_', '').astype('int')\ndf['Annual_Income'] = df['Annual_Income'].str.replace('_', '').astype('float')\ndf['Num_of_Loan'] = df['Num_of_Loan'].str.replace('_', '').astype('int')\ndf['Outstanding_Debt'] = df['Outstanding_Debt'].str.replace('_', '').astype('float')\ndf['Amount_invested_monthly'] = df['Amount_invested_monthly'].str.replace('_', '').astype('float')\ndf['Monthly_Balance'] = df['Monthly_Balance'].str.replace('_', '').astype('float')\ndf['Num_of_Delayed_Payment'] = df['Num_of_Delayed_Payment'].str.replace('_', '').astype('float').fillna(0).astype('int')\ndf['Changed_Credit_Limit'] = df['Changed_Credit_Limit'].str.replace('_', '0').astype('float').fillna(0)\ndf['Credit_Mix'] = df['Credit_Mix'].str.replace('_', 'N\u00e3o informado').astype('string')\ndf['Credit_History_Age'] = df['Credit_History_Age'].fillna('N\u00e3o informado').astype('string')\n\ndf['Credit_Score'] = df['Credit_Score'].astype('category')\n\n# feature engineering e limpeza em base de range de n\u00fameros\nbins = [0 * 12, 2500 * 12, 4000 * 12, 6000 * 12, 10000 * 12, float('inf')]\nlabels = ['low', 'lower_middle', 'middle', 'upper_middle', 'high']\ndf['Annual_Income_Ajustado'] = pd.cut(df['Annual_Income'], bins=bins, labels=labels)\n\nbins = [-1, 10, 30, 50, 75, 100, float('inf')]\nlabels = ['muito_baixo', 'baixo', 'moderado', 'alto', 'muito_alto', 'estourado']\ndf['Credit_Utilization_Ratio_Ajustado'] = pd.cut(df['Credit_Utilization_Ratio'], bins=bins, labels=labels)\n\nbins = [0, 2500, 4000, 6000, 10000, float('inf')]\nlabels = ['low', 'lower_middle', 'middle', 'upper_middle', 'high']\ndf['Monthly_Inhand_Salary_Ajustado'] = pd.cut(df['Monthly_Inhand_Salary'], bins=bins, labels=labels)\n\ndf = df.loc[(df['Num_Bank_Accounts'] &gt; 0) &amp; (df['Num_Bank_Accounts'] &lt;= 10)]\n\ndf = df.loc[(df['Age'] &gt;= 0) &amp; (df['Age'] &lt;= 120)]\nbins = [0, 12, 19, 35, 55, 75, float('inf')]\nlabels = ['crianca', 'adolescente', 'jovem_adulto', 'adulto', 'meia_idade', 'idoso']\ndf['Age_Ajustado'] = pd.cut(df['Age'], bins=bins, labels=labels)\n\nbins = [0, 500, 1500, 3000, 5000, float('inf')]\nlabels = ['muito_baixo', 'baixo', 'medio', 'alto', 'muito_alto']\ndf['Total_EMI_per_month_Ajustado'] = pd.cut(df['Total_EMI_per_month'], bins=bins, labels=labels)\n\ndf = df.loc[(df['Num_Credit_Card'] &gt; 0) &amp; (df['Num_Credit_Card'] &lt;= 10)]\n\ndf = df.loc[df['Interest_Rate'] &lt;= 30]\n\ndf = df.loc[(df['Num_of_Loan'] &gt;= 0) &amp; (df['Num_of_Loan'] &lt;= 10)]\n\ndf = df.loc[df['Delay_from_due_date'] &gt;= 0]\n\ndf = df.loc[(df['Num_of_Delayed_Payment'] &gt;= 0) &amp; (df['Num_of_Delayed_Payment'] &lt;= 25)]\n\ndf = df.loc[df['Num_Credit_Inquiries'] &lt;= 12]\n\ndf['years'] = df['Credit_History_Age'].str.extract(r'(\\d+)\\s*Years')\ndf['months'] = df['Credit_History_Age'].str.extract(r'(\\d+)\\s*Months')\ndf['years'] = pd.to_numeric(df['years'], errors='coerce').fillna(0).astype(int)\ndf['months'] = pd.to_numeric(df['months'], errors='coerce').fillna(0).astype(int)\ndf['Credit_History_Age_Ajustado'] = df['years'] * 12 + df['months']\n\ndf = df.loc[df['Total_EMI_per_month'] &lt;= 200]\n\nbins = [0, 1000, 10000, 50000, 250000, float('inf')]\nlabels = ['very_low', 'low', 'medium', 'high', 'very_high']\ndf['Amount_invested_monthly_Ajustado'] = pd.cut(df['Amount_invested_monthly'], bins=bins, labels=labels)\n\nbins = [-float('inf'), 0, 1000, 5000, 20000, float('inf')]\nlabels = ['negative', 'low', 'moderate', 'high', 'very_high']\ndf['Monthly_Balance_Ajustado'] = pd.cut(df['Monthly_Balance'], bins=bins, labels=labels)\n\n# remover colunas que n\u00e3o entram em modelos\ndf = df.drop(['ID', 'Customer_ID', 'Month', 'Name', 'SSN', 'Type_of_Loan', 'Credit_History_Age', \n              'Monthly_Balance', 'Amount_invested_monthly', 'Age', 'Monthly_Inhand_Salary', 'Annual_Income', 'months', 'years', 'Credit_Utilization_Ratio', 'Total_EMI_per_month'], axis=1)\n\n# limpeza de colunas categ\u00f3ricas e mudan\u00e7a de tipo\nindices_para_remover = df[df[\"Occupation\"].str.contains(\"_\", na=False)].index\ndf.drop(index=indices_para_remover, inplace=True)\n\nindices_para_remover = df[df[\"Credit_Mix\"].str.contains(\"N\u00e3o informado\", na=False)].index\ndf.drop(index=indices_para_remover, inplace=True) \n\nindices_para_remover = df[df[\"Payment_of_Min_Amount\"].str.contains(\"NM\", na=False)].index\ndf.drop(index=indices_para_remover, inplace=True)\n\nindices_para_remover = df[df[\"Payment_Behaviour\"].str.contains(\"!@9#%8\", na=False)].index\ndf.drop(index=indices_para_remover, inplace=True)\n\ndf['Occupation'] = df['Occupation'].astype('category')\ndf['Credit_Mix'] = df['Credit_Mix'].astype('category')\ndf['Payment_of_Min_Amount'] = df['Payment_of_Min_Amount'].astype('category')\ndf['Payment_Behaviour'] = df['Payment_Behaviour'].astype('category')\n\ndf['Annual_Income_Ajustado'] = df['Annual_Income_Ajustado'].astype('category')\ndf['Age_Ajustado'] = df['Age_Ajustado'].astype('category')\ndf['Monthly_Inhand_Salary_Ajustado'] = df['Monthly_Inhand_Salary_Ajustado'].astype('category')\ndf['Credit_History_Age_Ajustado'] = df['Credit_History_Age_Ajustado'].astype('category')\ndf['Amount_invested_monthly_Ajustado'] = df['Amount_invested_monthly_Ajustado'].astype('category')\ndf['Monthly_Balance_Ajustado'] = df['Monthly_Balance_Ajustado'].astype('category')\ndf['Credit_Utilization_Ratio_Ajustado'] = df['Credit_Utilization_Ratio_Ajustado'].astype('category')\ndf['Total_EMI_per_month_Ajustado'] = df['Total_EMI_per_month_Ajustado'].astype('category')\n\n# remo\u00e7\u00e3o de linhas com valores nulos\ndf = df.dropna()\n\n# resetar index\ndf = df.reset_index(drop=True)\n\n# Modelo de \u00c1rvore de Decis\u00e3o\n\nlabel_encoder = LabelEncoder()\n# aplicar label encoder na target\ndf['Credit_Score'] = label_encoder.fit_transform(df['Credit_Score'])\n\n# todas as colunas menos o target\nx = df.drop(\"Credit_Score\", axis=1)\n\n# aplicar label encoder nas categ\u00f3ricas\nx['Occupation'] = label_encoder.fit_transform(x['Occupation'])\nx['Credit_Mix'] = label_encoder.fit_transform(x['Credit_Mix'])\nx['Payment_of_Min_Amount'] = label_encoder.fit_transform(x['Payment_of_Min_Amount'])\nx['Payment_Behaviour'] = label_encoder.fit_transform(x['Payment_Behaviour'])\nx['Age_Ajustado'] = label_encoder.fit_transform(x['Age_Ajustado'])\nx['Annual_Income_Ajustado'] = label_encoder.fit_transform(x['Annual_Income_Ajustado'])\nx['Monthly_Inhand_Salary_Ajustado'] = label_encoder.fit_transform(x['Monthly_Inhand_Salary_Ajustado'])\nx['Credit_History_Age_Ajustado'] = label_encoder.fit_transform(x['Credit_History_Age_Ajustado'])\nx['Amount_invested_monthly_Ajustado'] = label_encoder.fit_transform(x['Amount_invested_monthly_Ajustado'])\nx['Monthly_Balance_Ajustado'] = label_encoder.fit_transform(x['Monthly_Balance_Ajustado'])\nx['Credit_Utilization_Ratio_Ajustado'] = label_encoder.fit_transform(x['Credit_Utilization_Ratio_Ajustado'])\nx['Total_EMI_per_month_Ajustado'] = label_encoder.fit_transform(x['Total_EMI_per_month_Ajustado'])\n\n# apenas a target\ny = df[\"Credit_Score\"]\n\n# Dividir os dados em conjuntos de treinamento e teste\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=42)\n\n# Criar e treinar o modelo de \u00e1rvore de decis\u00e3o\nclassifier = tree.DecisionTreeClassifier()\nclassifier.fit(x_train, y_train)\ny_pred = classifier.predict(x_test)\n\ncm = metrics.confusion_matrix(y_test, y_pred)\n\ndisp = metrics.ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=[0,1,2])\ndisp.plot(cmap=\"Blues\")\nplt.show()\n\n# Avaliar o modelo\naccuracy = classifier.score(x_test, y_test)\nprint(metrics.classification_report(y_test, y_pred, digits=4))\nprint(f\"Accuracy: {accuracy:.2f}\")\ntree.plot_tree(classifier)\n\n# Para imprimir na p\u00e1gina HTML\nbuffer = StringIO()\nplt.savefig(buffer, format=\"svg\")\nprint(buffer.getvalue())\n</code></pre> Occupation Num_Bank_Accounts Num_Credit_Card Interest_Rate Num_of_Loan Delay_from_due_date Num_of_Delayed_Payment Changed_Credit_Limit Num_Credit_Inquiries Credit_Mix Outstanding_Debt Payment_of_Min_Amount Payment_Behaviour Credit_Score Annual_Income_Ajustado Credit_Utilization_Ratio_Ajustado Total_EMI_per_month_Ajustado Monthly_Inhand_Salary_Ajustado Age_Ajustado Credit_History_Age_Ajustado Amount_invested_monthly_Ajustado Monthly_Balance_Ajustado Scientist 3 4 3 4 3 8 11.27 4 Good 809.98 No Low_spent_Small_value_payments Good low baixo muito_baixo low jovem_adulto 271 very_low low Scientist 3 4 3 4 3 6 11.27 4 Good 809.98 No High_spent_Medium_value_payments Standard low baixo muito_baixo low jovem_adulto 0 very_low low Teacher 2 4 6 1 7 1 7.42 2 Good 605.03 No High_spent_Large_value_payments Good lower_middle moderado muito_baixo lower_middle jovem_adulto 320 very_low low Teacher 2 4 6 1 3 1 6.42 2 Good 605.03 No Low_spent_Small_value_payments Good lower_middle moderado muito_baixo lower_middle jovem_adulto 323 very_low low Teacher 2 4 6 1 3 0 5.42 2 Good 605.03 No High_spent_Large_value_payments Good lower_middle moderado muito_baixo lower_middle jovem_adulto 324 very_low low Teacher 2 4 6 1 3 4 5.42 2 Good 605.03 No Low_spent_Small_value_payments Good lower_middle moderado muito_baixo lower_middle jovem_adulto 326 very_low low"},{"location":"arvore-decisao/main/#avaliacao-do-modelo","title":"Avalia\u00e7\u00e3o do Modelo","text":"<p>A avalia\u00e7\u00e3o do desempenho do modelo foi realizada utilizando m\u00e9tricas apropriadas para classifica\u00e7\u00e3o.</p> <p>Acur\u00e1cia: o modelo apresentou \u224870% de acertos, indicando um desempenho satisfat\u00f3rio considerando o conjunto de teste.</p>"},{"location":"arvore-decisao/main/#importancia-das-features","title":"Import\u00e2ncia das Features","text":"<p>Analisando o impacto de cada vari\u00e1vel na decis\u00e3o da \u00e1rvore de classifica\u00e7\u00e3o, as mais relevantes foram:</p> <ul> <li><code>Outstanding_Debt</code> \u2013 0,208</li> <li><code>Credit_Mix</code> \u2013 0,133</li> <li><code>Credit_History_Age_Ajustado</code> \u2013 0,095</li> <li><code>Changed_Credit_Limit</code> \u2013 0,088</li> <li><code>Delay_from_due_date</code> \u2013 0,086</li> </ul> <p>Essas informa\u00e7\u00f5es s\u00e3o \u00fateis para interpretabilidade do modelo, permitindo compreender quais atributos t\u00eam maior influ\u00eancia na classifica\u00e7\u00e3o do <code>Credit_Score</code>.</p>"},{"location":"arvore-decisao/main/#relatorio-final","title":"Relat\u00f3rio Final","text":"<p>O projeto teve como objetivo aplicar \u00e1rvores de decis\u00e3o para classificar clientes em faixas de pontua\u00e7\u00e3o de cr\u00e9dito, utilizando um conjunto de dados com informa\u00e7\u00f5es financeiras e banc\u00e1rias.</p> <p>Durante o processo, foram realizadas etapas importantes de explora\u00e7\u00e3o e pr\u00e9-processamento dos dados, incluindo:</p> <ul> <li>Limpeza e padroniza\u00e7\u00e3o das vari\u00e1veis;</li> <li>Convers\u00e3o de tipos de dados (<code>float64</code>, <code>int64</code>, <code>category</code>) para adequa\u00e7\u00e3o ao modelo;</li> <li>Remo\u00e7\u00e3o de colunas irrelevantes e tratamento de valores nulos ou inconsistentes;</li> <li>Aplica\u00e7\u00e3o de feature engineering, transformando vari\u00e1veis dispersas em categorias significativas.</li> </ul> <p>Ap\u00f3s essas etapas, o modelo foi treinado com 28.365 registros e 21 vari\u00e1veis preditivas. A base foi dividida em 70% para treino e 30% para teste, utilizando uma \u00e1rvore de decis\u00e3o. O modelo apresentou \u224870% de acur\u00e1cia no conjunto de teste, com destaque para as features mais relevantes na classifica\u00e7\u00e3o:</p> <ul> <li><code>Outstanding_Debt</code></li> <li><code>Credit_Mix</code></li> <li><code>Credit_History_Age_Ajustado</code></li> <li><code>Changed_Credit_Limit</code></li> <li><code>Delay_from_due_date</code></li> </ul> <p>Esses resultados demonstram que o modelo consegue identificar padr\u00f5es significativos no hist\u00f3rico financeiro dos clientes, oferecendo insights relevantes para an\u00e1lise de risco.</p> <p>Como pr\u00f3ximos passos, \u00e9 recomendada a explora\u00e7\u00e3o de hiperpar\u00e2metros, t\u00e9cnicas de balanceamento de classes e an\u00e1lise de intera\u00e7\u00f5es entre vari\u00e1veis, a fim de melhorar ainda mais a performance e a robustez do modelo.</p>"},{"location":"exemplo-home/","title":"Template de Entrega","text":"Edi\u00e7\u00e3o <p>2025.1</p>"},{"location":"exemplo-home/#grupokit-x","title":"Grupo/Kit X","text":"<ol> <li>Jo\u00e3o da Silva</li> <li>Pedro de Souza</li> <li>Maria Oliveira</li> <li>Grupo K<ul> <li>Jo\u00e3o da Silva</li> <li>Pedro de Souza</li> </ul> </li> </ol> <p>Instru\u00e7\u00f5es</p> <p>Voc\u00eas devem utilizar este template como um bloco de notas para registrar o que foi feito e o que falta fazer. Voc\u00eas devem adicionar as informa\u00e7\u00f5es necess\u00e1rias. O template deve ser editado e atualizado a cada entrega, registrando assim a data de entrega e o que foi feito at\u00e9 o momento via Git.</p>"},{"location":"exemplo-home/#entregas","title":"Entregas","text":"<ul> <li> Roteiro 1 - Data 23/02/2025</li> <li> Roteiro 2</li> <li> Roteiro 3</li> <li> Roteiro 4</li> <li> Projeto</li> </ul>"},{"location":"exemplo-home/#diagramas","title":"Diagramas","text":"<p>Use o Mermaid para criar os diagramas de documenta\u00e7\u00e3o.</p> <p>Mermaid Live Editor</p> <pre><code>flowchart TD\n    Deployment:::orange --&gt;|defines| ReplicaSet\n    ReplicaSet --&gt;|manages| pod((Pod))\n    pod:::red --&gt;|runs| Container\n    Deployment --&gt;|scales| pod\n    Deployment --&gt;|updates| pod\n\n    Service:::orange --&gt;|exposes| pod\n\n    subgraph  \n        ConfigMap:::orange\n        Secret:::orange\n    end\n\n    ConfigMap --&gt; Deployment\n    Secret --&gt; Deployment\n    classDef red fill:#f55\n    classDef orange fill:#ffa500</code></pre>"},{"location":"exemplo-home/#codigos","title":"C\u00f3digos","text":"De um arquivo remotoAnota\u00e7\u00f5es no c\u00f3digo main.yaml<pre><code>name: ci\non:\n  - push\n  - pull_request\n\n# Environment\nenv:\n  CI: true\n  PYTHON_VERSION: 3.12\n\n# Jobs to run\njobs:\n\n  # Build and deploy documentation site\n  deploy:\n    if: github.event_name != 'pull_request' &amp;&amp; github.ref == 'refs/heads/main'\n    runs-on: ubuntu-latest\n    steps:\n\n      # Checkout source form GitHub\n      - uses: actions/checkout@v4\n\n      # Install Python runtime and dependencies\n      - uses: actions/setup-python@v4\n        with:\n          python-version: ${{ env.PYTHON_VERSION }}\n\n      # pip\n      - run: |\n          pip install -r requirements.txt\n\n      # deploy\n      - run: |\n          mkdocs gh-deploy --force\n</code></pre> compose.yaml<pre><code>name: app\n\n    db:\n        image: postgres:17\n        environment:\n            POSTGRES_DB: ${POSTGRES_DB:-projeto} # (1)!\n            POSTGRES_USER: ${POSTGRES_USER:-projeto}\n            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-projeto}\n        ports:\n            - 5432:5432 #(2)!\n</code></pre> <ol> <li> <p>Caso a vari\u00e1vel de ambiente <code>POSTGRES_DB</code> n\u00e3o exista ou seja nula - n\u00e3o seja definida no arquivo <code>.env</code> - o valor padr\u00e3o ser\u00e1 <code>projeto</code>. Vide documenta\u00e7\u00e3o.</p> </li> <li> <p>Aqui \u00e9 feito um t\u00fanel da porta 5432 do container do banco de dados para a porta 5432 do host (no caso localhost). Em um ambiente de produ\u00e7\u00e3o, essa porta n\u00e3o deve ser exposta, pois ningu\u00e9m de fora do compose deveria acessar o banco de dados diretamente.</p> </li> </ol>"},{"location":"exemplo-home/#exemplo-de-video","title":"Exemplo de v\u00eddeo","text":"<p>Lorem ipsum dolor sit amet</p>"},{"location":"exemplo-home/#referencias","title":"Refer\u00eancias","text":"<p>Material for MkDocs</p>"},{"location":"roteiro1/main/","title":"Exemplo 1","text":""},{"location":"roteiro1/main/#objetivo","title":"Objetivo","text":"<p>Aqui vai o objetivo macro do roteiro. Por que estamos fazendo o que estamos fazendo?</p>"},{"location":"roteiro1/main/#montagem-do-roteiro","title":"Montagem do Roteiro","text":"<p>Os pontos \"tarefas\" s\u00e3o os passos que devem ser seguidos para a realiza\u00e7\u00e3o do roteiro. Eles devem ser claros e objetivos. Com evid\u00eancias claras de que foram realizados.</p>"},{"location":"roteiro1/main/#tarefa-1","title":"Tarefa 1","text":"<p>Instalando o MAAS:</p> sudo snap install maas --channel=3.5/Stable <p></p> <p>Dashboard do MAAS</p> <p>Conforme ilustrado acima, a tela inicial do MAAS apresenta um dashboard com informa\u00e7\u00f5es sobre o estado atual dos servidores gerenciados. O dashboard \u00e9 composto por diversos pain\u00e9is, cada um exibindo informa\u00e7\u00f5es sobre um aspecto espec\u00edfico do ambiente gerenciado. Os pain\u00e9is podem ser configurados e personalizados de acordo com as necessidades do usu\u00e1rio.</p>"},{"location":"roteiro1/main/#tarefa-2","title":"Tarefa 2","text":""},{"location":"roteiro1/main/#app","title":"App","text":""},{"location":"roteiro1/main/#tarefa-1_1","title":"Tarefa 1","text":""},{"location":"roteiro1/main/#tarefa-2_1","title":"Tarefa 2","text":"<p>Exemplo de diagrama</p> <pre><code>architecture-beta\n    group api(cloud)[API]\n\n    service db(database)[Database] in api\n    service disk1(disk)[Storage] in api\n    service disk2(disk)[Storage] in api\n    service server(server)[Server] in api\n\n    db:L -- R:server\n    disk1:T -- B:server\n    disk2:T -- B:db</code></pre> <p>Mermaid</p>"},{"location":"roteiro1/main/#questionario-projeto-ou-plano","title":"Question\u00e1rio, Projeto ou Plano","text":"<p>Esse se\u00e7\u00e3o deve ser preenchida apenas se houver demanda do roteiro.</p>"},{"location":"roteiro1/main/#discussoes","title":"Discuss\u00f5es","text":"<p>Quais as dificuldades encontradas? O que foi mais f\u00e1cil? O que foi mais dif\u00edcil?</p>"},{"location":"roteiro1/main/#conclusao","title":"Conclus\u00e3o","text":"<p>O que foi poss\u00edvel concluir com a realiza\u00e7\u00e3o do roteiro?</p>"},{"location":"roteiro2/main/","title":"Exemplo 2","text":""},{"location":"roteiro2/main/#diagrama-de-classes-do-banco","title":"Diagrama de Classes do Banco","text":"<pre><code>classDiagram\n    class Conta {\n        - String id\n        # double saldo\n        - Cliente cliente\n        + sacar(double valor)\n        + depositar(double valor)\n    }\n    class Cliente {\n        - String id\n        - String nome\n        - List&lt;Conta&gt; contas\n    }\n    class PessoaFisica {\n        - String cpf\n    }\n    class PessoaJuridica {\n        - String cnpj\n    }\n    class ContaCorrente {\n        - double limite\n        + sacar(double valor)\n    }\n    class ContaPoupanca {\n        + sacar(double valor)\n    }\n    Conta *-- Cliente\n    Conta &lt;|-- ContaCorrente\n    Conta &lt;|-- ContaPoupanca\n    Cliente &lt;|-- PessoaFisica\n    Cliente &lt;|-- PessoaJuridica</code></pre>"},{"location":"roteiro2/main/#diagrama-de-sequencia-de-autorizacao","title":"Diagrama de Seq\u00fc\u00eancia de Autoriza\u00e7\u00e3o","text":"<pre><code>sequenceDiagram\n  autonumber\n  actor User\n  User-&gt;&gt;Auth Service: request with token\n  Auth Service-&gt;&gt;Auth Service: decodes the token and extracts claims\n  Auth Service-&gt;&gt;Auth Service: verifies permissions\n  critical allowed\n    Auth Service-&gt;&gt;Secured Resource: authorizes the request\n    Secured Resource-&gt;&gt;User: returns the response\n  option denied\n    Auth Service--&gt;&gt;User: unauthorized message\n  end  </code></pre>"},{"location":"roteiro3/main/","title":"Exemplo 3","text":"<p>Running the code below in Browser (Woooooowwwwww!!!!!!). <sup>1</sup></p> <p> Editor (session: default) Run <pre>import ssl\nimport pandas as pd\n\ndf = pd.DataFrame()\ndf['AAPL'] = pd.Series([1, 2, 3])\ndf['MSFT'] = pd.Series([4, 5, 6])\ndf['GOOGL'] = pd.Series([7, 8, 9])\n\nprint(df)\n</pre> Output Clear <pre></pre> </p> <ol> <li> <p>Pyodide \u21a9</p> </li> </ol>"},{"location":"roteiro4/main/","title":"Exemplo 4","text":"<p>Se chegou aqui, \u00e9 porque voc\u00ea est\u00e1 interessado em saber mais. Logo, de brinde, como rodar um c\u00f3digo <code>Python</code> aqui.</p> 2025-08-24T22:40:04.267186 image/svg+xml Matplotlib v3.10.5, https://matplotlib.org/ 2025-08-24T22:40:04.991357 image/svg+xml Matplotlib v3.10.5, https://matplotlib.org/ <p>Markdown-exec \u00e9 uma extens\u00e3o do Markdown que permite executar c\u00f3digo Python diretamente no Markdown. Isso \u00e9 \u00fatil para gerar resultados din\u00e2micos ou executar scripts de forma interativa.</p>"}]}